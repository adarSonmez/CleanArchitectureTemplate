services:
  cleanarchitecturetemplate.webapi:
    container_name: clean-webapi
    image: ${DOCKER_REGISTRY-}cleanarchitecturetemplatewebapi
    build:
      context: .
      dockerfile: Presentation/CleanArchitectureTemplate.WebAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_HTTP_PORTS=${ASPNETCORE_HTTP_PORTS}
      - ASPNETCORE_HTTPS_PORTS=${ASPNETCORE_HTTPS_PORTS}
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
      - Logging__Seq__ServerUrl=${Logging__Seq__ServerUrl}
      - AI__Ollama__ServerUrl=${AI__Ollama__ServerUrl}
      - RedisSettings__SentinelEndpoints__0=${RedisSettings__SentinelEndpoints__0}
      - RedisSettings__SentinelEndpoints__1=${RedisSettings__SentinelEndpoints__1}
      - RedisSettings__MasterMapping__0__0=${RedisSettings__MasterMapping__0__0}
      - RedisSettings__MasterMapping__0__1=${RedisSettings__MasterMapping__0__1}
      - RedisSettings__MasterMapping__1__0=${RedisSettings__MasterMapping__1__0}
      - RedisSettings__MasterMapping__1__1=${RedisSettings__MasterMapping__1__1}
      - RedisSettings__MasterMapping__2__0=${RedisSettings__MasterMapping__2__0}
      - RedisSettings__MasterMapping__2__1=${RedisSettings__MasterMapping__2__1}
      - RedisSettings__MasterMapping__3__0=${RedisSettings__MasterMapping__3__0}
      - RedisSettings__MasterMapping__3__1=${RedisSettings__MasterMapping__3__1}
    ports:
      - "${ASPNETCORE_HTTP_PORTS}:${ASPNETCORE_HTTP_PORTS}"
      - "${ASPNETCORE_HTTPS_PORTS}:${ASPNETCORE_HTTPS_PORTS}"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - postgres
      - ollama
      - seq
      - redis-master
      - redis-sentinel-1
      - redis-sentinel-2
    networks:
      - clean-net

  postgres:
    container_name: clean-postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - clean-net

  ollama:
    container_name: clean-ollama
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - clean-net
    restart: unless-stopped

  seq:
    container_name: clean-seq
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
    ports:
      - "5341:80"
    networks:
      - clean-net

  redis-master:
    container_name: clean-redis-master
    image: redis:alpine
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - clean-net

  redis-slave-1:
    container_name: clean-redis-slave-1
    image: redis:alpine
    command: ["redis-server", "--slaveof", "clean-redis-master", "6379"]
    ports:
      - "6380:6379"
    networks:
      - clean-net

  redis-slave-2:
    container_name: clean-redis-slave-2
    image: redis:alpine
    command: ["redis-server", "--slaveof", "clean-redis-master", "6379"]
    ports:
      - "6381:6379"
    networks:
      - clean-net

  redis-slave-3:
    container_name: clean-redis-slave-3
    image: redis:alpine
    command: ["redis-server", "--slaveof", "clean-redis-master", "6379"]
    ports:
      - "6382:6379"
    networks:
      - clean-net

  redis-sentinel-1:
    container_name: clean-redis-sentinel-1
    image: redis:alpine
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    ports:
      - "6383:26379"
    volumes:
      - ./redis-sentinel.conf:/usr/local/etc/redis/sentinel.conf
    networks:
      - clean-net

  redis-sentinel-2:
    container_name: clean-redis-sentinel-2
    image: redis:alpine
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    ports:
      - "6384:26379"
    volumes:
      - ./redis-sentinel.conf:/usr/local/etc/redis/sentinel.conf
    networks:
      - clean-net

volumes:
  postgres_data:
  ollama_data:

networks:
  clean-net:
    driver: bridge